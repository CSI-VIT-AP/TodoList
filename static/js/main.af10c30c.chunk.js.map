{"version":3,"sources":["assets/background.png","firebase/firebase.js","actions/board.js","actions/auth.js","actions/boards.js","components/Navbar/BoardMenu.js","components/Navbar/BoardTitleMenu.js","components/Navbar/InviteMenu.js","components/Navbar/BoardNav.js","components/Board/ActionButton.js","components/Board/Card.js","components/Board/List.js","components/Board/Board.js","components/BoardCollection/BoardTile.js","components/BoardCollection/CreateBoardModal.js","components/BoardCollection/BoardCollection.js","components/Navbar/TrelloNav.js","components/ProtectedRoute.js","components/SignIn.js","App.js","reducers/board.js","reducers/index.js","reducers/auth.js","reducers/boards.js","Root.js","configureStore.js","serviceWorker.js","index.js","assets/CSILogo.png"],"names":["module","exports","__webpack_require__","p","myFirebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","receiveBoard","board","type","updateBoard","dispatch","auth","currentUser","database","ref","child","boardId","set","then","catch","err","loadBoard","uid","once","snapshot","val","lists","receiveBoardError","getMember","memberList","members","key","on","user","push","recievedBoardMember","console","log","receiveLogin","loginUser","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","provider","wrap","_context","prev","next","GoogleAuthProvider","signInWithPopup","userId","email","replace","name","displayName","error","stop","_x","apply","this","arguments","verifyAuth","_ref3","_callee3","_context3","onAuthStateChanged","_x3","deleteBoard","exists","forEach","data","remove","loadUserBoards","boards","snap","title","receiveBoards","MenuWrapper","styled","div","_templateObject","taggedTemplateLiteral","props","showBoardMenu","Menu","_templateObject2","MenuItems","_templateObject3","Title","h2","_templateObject4","CloseMenu","button","_templateObject5","OptionsList","ul","_templateObject6","OptionsItem","li","_templateObject7","Icon","span","_templateObject8","Members","_templateObject9","MemberList","_templateObject10","connect","state","toggleMenu","react_default","createElement","onClick","react_fontawesome_index_es","icon","faTimes","faUsers","map","member","i","style","fontSize","fontWeight","TitleMenu","BoardTitleMenu_templateObject","Header","BoardTitleMenu_templateObject2","label","BoardTitleMenu_templateObject3","CloseMenuButton","BoardTitleMenu_templateObject4","Form","BoardTitleMenu_templateObject5","Input","input","BoardTitleMenu_templateObject6","SaveButton","BoardTitleMenu_templateObject7","Label","BoardTitleMenu_templateObject8","BoardTitleMenu","handleShowNameMenu","handleNameSubmit","placeholder","onNameChange","BoardTitleMenu_Title","onSubmit","onChange","InviteMenu_templateObject","InviteMenu_templateObject2","InviteMenu_templateObject3","InviteMenu_templateObject4","InviteMenu_templateObject5","InviteMenu_templateObject6","InviteMenu_templateObject7","InviteMenu_templateObject8","InviteMenu","handleShowInvite","handleSubmitInvite","onEmailChange","InviteMenu_TitleMenu","InviteMenu_Header","InviteMenu_Title","InviteMenu_CloseMenuButton","InviteMenu_Form","InviteMenu_Label","InviteMenu_Input","InviteMenu_SaveButton","NavWrapper","BoardNav_templateObject","color","Nav","BoardNav_templateObject2","NavActionsWrapper","BoardNav_templateObject3","MenuActionButton","BoardNav_templateObject4","MenuButton","BoardNav_templateObject5","theme","listenBoardName","receiveBoardName","updateBoardName","boardName","update","addUserToBoard","setSuccess","userToAdd","emailWithoutDot","Error","_useState","useState","_useState2","slicedToArray","showNameMenu","setShowNameMenu","_useState3","_useState4","setBoardName","_useState5","_useState6","showInviteMenu","setShowInviteMenu","_useState7","_useState8","inviteEmail","setInviteEmail","_useState9","_useState10","setShowBoardMenu","_useState11","_useState12","success","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleShowBoardMenu","useEffect","isLoading","Fragment","react_toastify_esm","getName","Navbar_BoardTitleMenu","e","preventDefault","newName","length","target","value","Navbar_InviteMenu","Navbar_BoardMenu","faEllipsisH","marginRight","ActionButton","formOpen","text","openForm","_this","setState","closeForm","handleInputChange","handleAddList","addList","setTimeout","handleAddCard","addCard","listID","renderAddButton","list","buttonText","buttonTextColor","buttonTextBackground","Button","ActionButton_templateObject","Add_default","renderForm","placeholderText","Buttons","ActionButton_templateObject2","Card","margin","overflow","minHeight","minWidth","react_textarea_autosize_esm_browser","autoFocus","onBlur","resize","width","border","outline","height","alignItems","display","Button_Button","onMouseDown","variant","backgroundColor","textTransform","Component","payload","Div","Card_templateObject","StyledCardContent","CardContent","Card_templateObject2","CardOptions","Card_templateObject3","StyledCard","Card_templateObject4","TrelloCard","id","index","useDispatch","store","useStore","handleDeleteCard","cardID","deleteCard","tempboard","getState","react_beautiful_dnd_esm","draggableId","String","provided","assign","innerRef","draggableProps","dragHandleProps","onMouseUp","faTrash","ListStyle","List_templateObject","List_templateObject2","DroppableCards","List_templateObject3","ListHeader","List_templateObject4","ListOptions","List_templateObject5","List","cards","handleDeleteList","deleteList","lib_default","List_Title","droppableId","droppableProps","card","Board_Card","Board_ActionButton","ListsContainer","Board_templateObject","BoardStyle","Board_templateObject2","Board","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDragEnd","result","destination","source","sort","match","params","listenBoard","isAuthenticated","Navbar_BoardNav","direction","Board_List","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","TileOptions","BoardTile_templateObject","Tile","BoardTile_templateObject2","TileText","BoardTile_templateObject3","BoardTile","className","CreateBoardModal","open","toggleOpen","defineProperty","createBoard","classes","react","Dialog","onClose","DialogTitle","action","method","DialogContent","TextField","required","fullWidth","DialogActions","alignItemsAndJustifyContent","IconButton","Close_default","0","receiveCreateBoard","withStyles","justifyContent","Collection","BoardCollection_templateObject","Paper","BoardCollection_templateObject2","BoardCollection_templateObject3","Spacing","BoardCollection_templateObject4","Boards","BoardCollection_templateObject5","BoardCollection","handleClickBoard","bind","assertThisInitialized","SVGAnimatedString","includes","_this2","BoardCollection_Title","AccountCircle_default","react_loader_spinner_default","BoardCollection_CreateBoardModal","MainNav","TrelloNav_templateObject","Logo","TrelloNav_templateObject2","LogoHeading","TrelloNav_templateObject3","Img","img","TrelloNav_templateObject4","TrelloNav_templateObject5","SignButton","TrelloNav_templateObject6","TrelloNav","useHistory","isLoggedIn","_ref2","_callee2","_context2","signOut","_x2","react_router_dom","to","faHome","size","src","logo","TrelloNav_Buttons","ProtectedRoute","component","rest","objectWithoutProperties","react_router","render","useStyles","makeStyles","paper","marginTop","spacing","flexDirection","background","padding","borderRadius","avatar","google","form","submit","SignIn","toFrontpage","_handleSignIn","redirect","signIn","Container","maxWidth","Avatar","alt","fc_index_esm","_props$auth","document","body","backgroundImage","concat","Background","backgroundRepeat","backgroundSize","Navbar_TrelloNav","components_ProtectedRoute","exact","path","newID","ObjectID","toHexString","initialState","objectSpread","boradId","newList","toConsumableArray","newLists","splice","newCard","cardsList","_action$payload","newState","_newState$lists","_list$cards","find","_otherList$cards","otherList","combineReducers","loginError","logoutError","registerError","errorMessage","verifyingError","persistedState","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","configureStore","Root","es","CssBaseline","src_App","Boolean","window","location","hostname","ReactDOM","src_Root","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af10c30c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.6c4eb752.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n    // add code here\n    apiKey: \"AIzaSyCTIptOc54oJkSJeatmM549t9QnC8ZGcEg\",\n  authDomain: \"todolist-9c098.firebaseapp.com\",\n  databaseURL: \"https://todolist-9c098-default-rtdb.firebaseio.com/\",\n  projectId: \"todolist-9c098\",\n  storageBucket: \"todolist-9c098.appspot.com\",\n  messagingSenderId: \"995813157929\",\n  appId: \"1:995813157929:web:e842f3e77a72890dd90038\",\n  measurementId: \"G-MBQ3DJTQD3\"\n};\n\nexport const myFirebase = firebase.initializeApp(firebaseConfig);\n","import { myFirebase } from \"../firebase/firebase\";\n\nexport const GET_BOARD_REQUEST = \"GET_BOARD_REQUEST\";\nexport const GET_BOARD_SUCCESS = \"GET_BOARD_SUCCESS\";\nexport const GET_BOARD_FAIL = \"GET_BOARD_FAIL\";\n\nexport const UPDATE_BOARD_REQUEST = \"UPDATE_BOARD_REQUEST\";\nexport const UPDATE_BOARD_SUCCESS = \"UPDATE_BOARD_SUCCESS\";\nexport const UPDATE_BOARD_FAIL = \"UPDATE_BOARD_FAIL\";\n\nexport const SET_BOARD_ID = \"SET_BOARD_ID\";\n\nexport const ADD_LIST = \"ADD_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\nexport const GET_LISTS = \"GET_LISTS\";\n\nexport const ADD_CARD = \"ADD_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\n\nexport const DRAG_HAPPENED = \"DRAG_HAPPENED\";\n\n\nexport const GET_BOARD_MEMBER=\"GET_BOARD_MEMBER\";\nexport const RECIEVED_BOARD_MEMBER=\"RECIVED_BOARD_MEMBER\";\nexport const GET_BOARD_MEMEBR_FAILED=\"GET_BOARD_MEMEBR_FAILED\"\n\n\nexport const addList = (title) => {\n    return {\n        type: ADD_LIST,\n        payload: title,\n    };\n};\n\nexport const deleteList = (listID) => {\n    return {\n        type: DELETE_LIST,\n        payload: { listID }\n    };\n};\n\nexport const addCard = (listID, text) => {\n    return {\n        type: ADD_CARD,\n        payload: { text, listID },\n    };\n};\n\nexport const deleteCard = (cardID, listID) => {\n    return {\n        type: DELETE_CARD,\n        payload: { cardID, listID }\n    };\n};\n\nexport const requestBoard = () => {\n    return {\n        type: GET_BOARD_REQUEST,\n    };\n};\n\nexport const receiveBoard = (board) => {\n    return {\n        type: GET_BOARD_SUCCESS,\n        board\n    };\n};\n\nexport const receiveBoardError = (uid) => {\n    return {\n        type: GET_BOARD_FAIL,\n        uid\n    };\n};\n\nexport const requestUpdateBoard = () => {\n    return {\n        type: UPDATE_BOARD_REQUEST,\n    };\n};\n\nexport const receiveUpdatedBoard = () => {\n    return {\n        type: UPDATE_BOARD_SUCCESS,\n    };\n};\n\nexport const updateBoardError = () => {\n    return {\n        type: UPDATE_BOARD_FAIL,\n    };\n};\n\nexport const getBoardMember=()=>{\n    return {\n        type: GET_BOARD_MEMBER\n    }\n}\n\nexport const recievedBoardMember=(memberList)=>{\n    return {\n        type: RECIEVED_BOARD_MEMBER,\n        memberList:memberList\n    }\n}\n\nexport const getBoardMemberFail=()=>{\n    return {\n        type: GET_BOARD_FAIL\n    }\n}\n\nexport const sort = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    draggableId,\n    type\n) => {\n    return {\n        type: DRAG_HAPPENED,\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId,\n            type\n        }\n    };\n};\n\nexport const updateBoard = (board) => dispatch => {\n    const user = myFirebase.auth().currentUser;\n    if (!user) {\n        dispatch(updateBoardError());\n    } else {\n        dispatch(requestUpdateBoard());\n        myFirebase.database()\n            .ref('/board/')\n            .child(board.boardId)\n            .set(board).then(() => {\n                dispatch(receiveUpdatedBoard());\n            }).catch((err) => {\n                dispatch(updateBoardError());\n            });\n    }\n};\n\nexport const loadBoard = (uid) => dispatch => {\n    dispatch(requestBoard());\n\n    myFirebase.database().ref('/board/' + uid).once('value').then(function (snapshot) {\n        const board = {\n            boardId: snapshot.val().boardId,\n            lists: snapshot.val().lists,\n        }\n        dispatch(receiveBoard(board));\n    }).catch((err) => {\n        dispatch(receiveBoardError(uid));\n    });\n};\n\nexport const listenBoard = (uid) => dispatch => {\n    myFirebase.database().ref('/board/' + uid).on('value', function (snapshot) {\n        if (snapshot.val() != null) {\n            console.log(snapshot.val().boardId)\n            const board = {\n                boardId: snapshot.val().boardId,\n                lists: snapshot.val().lists,\n            }\n            dispatch(receiveBoard(board));\n        }\n    });\n};\n\nexport const getMember=(uid)=>dispatch=>{\n    myFirebase.database().ref('/boards/'+uid).once('value').then((snapshot)=>{\n        let memberList=[]\n        if(snapshot.val()!=null){\n            let members=snapshot.val().members\n            for(let key in members){\n                myFirebase.database().ref(\"/users/\"+members[key].uid).on('value',(user)=>{\n                    if(user.val()!=null){\n                        memberList.push(user.val())\n                    }\n                })\n            }\n        }\n        dispatch(recievedBoardMember(memberList))\n    }).catch((err)=>{\n        console.log(err)\n    })\n}","import { myFirebase } from \"../firebase/firebase\";\nimport firebase from \"firebase\";\n\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\nconst requestLogin = () => {\n    return {\n        type: LOGIN_REQUEST\n    };\n};\n\nconst receiveLogin = user => {\n    return {\n        type: LOGIN_SUCCESS,\n        user\n    };\n};\n\nconst loginError = () => {\n    return {\n        type: LOGIN_FAILURE\n    };\n};\n\nconst requestLogout = () => {\n    return {\n        type: LOGOUT_REQUEST\n    };\n};\n\nconst receiveLogout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    };\n};\n\nconst logoutError = () => {\n    return {\n        type: LOGOUT_FAILURE\n    };\n};\n\nconst verifyRequest = () => {\n    return {\n        type: VERIFY_REQUEST\n    };\n};\n\nconst verifySuccess = () => {\n    return {\n        type: VERIFY_SUCCESS\n    };\n};\n\nexport const loginUser = (history) => async dispatch => {\n    dispatch(requestLogin());\n    var provider = new firebase.auth.GoogleAuthProvider();\n\n    myFirebase.auth()\n        .signInWithPopup(provider)\n        .then(user => {\n            const userId=user.user.uid\n            const email=user.user.email.replace(\".\", \",\");\n            const name=user.user.displayName;\n            console.log(user)\n            console.log(userId,email,name)\n            myFirebase.database().ref('/users/' + userId).set({\n                email: email,\n                name: name\n            });\n            myFirebase.database().ref('/emailToUid/').child(email).set({\n                userId\n            })\n\n                dispatch(receiveLogin(user));\n                history.push(\"/\");\n            \n        })\n        .catch(error => {\n            //Do something with the error if you want!\n            console.log(error)\n            dispatch(loginError());\n        });\n};\n\n\n\nexport const logoutUser = () => async dispatch => {\n    dispatch(requestLogout());\n    myFirebase\n        .auth()\n        .signOut()\n        .then(() => {\n            dispatch(receiveLogout());\n        })\n        .catch(error => {\n            //Do something with the error if you want!\n            dispatch(logoutError());\n        });\n};\n\nexport const verifyAuth = () => async dispatch => {\n    dispatch(verifyRequest());\n    myFirebase.auth().onAuthStateChanged(user => {\n        if (user !== null) {\n            dispatch(receiveLogin(user));\n            dispatch(verifySuccess());\n        } else {\n            dispatch(loginError());\n        }\n    });\n};","import { myFirebase } from \"../firebase/firebase\";\n\nexport const CREATE_BOARD_REQUEST = \"CREATE_BOARD_REQUEST\";\nexport const CREATE_BOARD_SUCCESS = \"CREATE_BOARD_SUCCESS\";\nexport const CREATE_BOARD_FAIL = \"CREATE_BOARD_FAIL\";\n\nexport const GET_BOARDS_REQUEST = \"GET_BOARDS_REQUEST\";\nexport const GET_BOARDS_SUCCESS = \"GET_BOARDS_SUCCESS\";\nexport const GET_BOARDS_FAIL = \"GET_BOARDS_FAIL\";\n\nexport const GET_BOARD_NAME_SUCCESS = \"GET_BOARD_NAME_SUCCESS\";\n\n// Get Boards\nconst requestBoards = () => {\n    return {\n        type: GET_BOARDS_REQUEST\n    };\n};\nconst receiveBoards = (boards) => {\n    return {\n        type: GET_BOARDS_SUCCESS,\n        boards\n    };\n};\nconst receiveBoardsError = () => {\n    return {\n        type: GET_BOARDS_FAIL\n    };\n};\n\n\n// Create Board\nconst requestCreateBoard = () => {\n    return {\n        type: CREATE_BOARD_REQUEST\n    };\n};\nconst receiveCreateBoard = (uid) => {\n    return {\n        type: CREATE_BOARD_SUCCESS,\n        uid\n    };\n};\nconst createBoardError = () => {\n    return {\n        type: CREATE_BOARD_FAIL\n    };\n};\n\n// Listen Board Name\nconst receiveBoardName = (name, boardId) => {\n    return {\n        type: GET_BOARD_NAME_SUCCESS,\n        name,\n        boardId,\n    };\n};\n\nexport const createBoard = (title) => dispatch => {\n    dispatch(requestCreateBoard());\n    const user = myFirebase.auth().currentUser;\n    if (!user) {\n        dispatch(createBoardError());\n    } else {\n        const uid = user.uid;\n        const key = myFirebase.database().ref('boards/')\n            .push({\n                title: title\n            }, (err) => {\n                if (err) {\n                    dispatch(createBoardError());\n                }\n            }).key;\n        myFirebase.database().ref('boards/' + key + '/members').push({\n            uid: uid\n        });\n        myFirebase.database().ref('/userBoards/' + uid).child(key).set(true);\n        myFirebase.database().ref('/board/' + key).set({\n            boardId: key,\n            lists: { 0: { id: '0', title: 'Todo' } },\n        });\n        dispatch(receiveCreateBoard(key));\n    }\n};\n\nexport const deleteBoard = (boardId) => dispatch => {\n    // Get a list of all userIds from '/boards/boardId/members/' \n    // Go through that list and delete all occurrences of boardId in each userId\n    myFirebase.database().ref('/boards/' + boardId + '/members/').once('value', function (snapshot) {\n        if (snapshot.exists()) {\n            snapshot.forEach(function (data) {\n                myFirebase.database().ref('/userBoards/' + data.val().uid).child(boardId).remove();\n            })\n        }\n    }).then(() => {\n        // remove from '/boards/'\n        myFirebase.database().ref('/boards/' + boardId).remove();\n        // remove from '/board/'\n        myFirebase.database().ref('/board/' + boardId).remove().then(() => {\n            dispatch(loadUserBoards());\n        });\n    });\n}\n\nexport const loadUserBoards = () => dispatch => {\n    dispatch(requestBoards());\n    const user = myFirebase.auth().currentUser;\n    // Get list of boardIds from /userBoards/\n    // Then get boards titles from /boards/ using the boardIds\n    let boards = [];\n    myFirebase.database().ref('/userBoards/' + user.uid).once('value', function (snapshot) {\n        snapshot.forEach(function (data) {\n            myFirebase.database().ref('/boards/' + data.key).once('value', function (snap) {\n                if (snap.exists()) {\n                    boards.push({\n                        boardId: data.key,\n                        title: snap.val().title,\n                    });\n                }\n            }).then(() => {\n                dispatch(receiveBoards(boards));\n            })\n        });\n    });\n};\n\nexport const addUserToBoard = (email, boardId,setSuccess) => dispatch => {\n    const emailWithoutDot = email.replace(\".\", \",\");\n    // get userId from email\n    var userToAdd;\n    myFirebase.database().ref('/emailToUid/' + emailWithoutDot).child('userId').once('value').then( function (snapshot) {\n\n        if (snapshot.exists()) {\n            userToAdd = snapshot.val();\n            // Add boardId as key so that the boardIds are not duplicated \n            // if a user is added to a board multiple times\n            myFirebase.database().ref('/userBoards/' + userToAdd).child(boardId).set(true);\n            // also add userid to members array\n            myFirebase.database().ref('/boards/' + boardId + '/members/').push({\n                uid: userToAdd\n            })\n        }else{\n            const err=new Error(snapshot)\n            throw err\n        }\n    }).then(()=>{\n        setSuccess(true)\n    }).catch(err=>{\n        console.log(err)\n        setSuccess(false)\n    });\n    // Todo: dispatch if Add was successful & display error message\n}\n\nexport const updateBoardName = (boardName, boardId) => dispatch => {\n    myFirebase.database().ref('/boards/' + boardId).update({ title: boardName });\n};\n\nexport const listenBoardName = (boardId) => dispatch => {\n    myFirebase.database().ref('/boards/' + boardId).on('value', function (snapshot) {\n        if (snapshot.val() != null)\n            dispatch(receiveBoardName(snapshot.val().title, boardId));\n    });\n};\n\n","import {  faTimes,faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from 'react';\nimport { connect} from 'react-redux';\nimport styled from 'styled-components';\n\n\n\nconst MenuWrapper = styled.div`\n    z-index: 999;\n    overflow-x: hidden;\n    width: 340px;\n    position: fixed;\n    top: 0;\n    right: 0;\n    height: 100vh;\n    background-color: whitesmoke;\n    transform: ${(props) => props.showBoardMenu ? 'translateX(0)' : `translateX(100%)`};\n    transition: transform 0.3s ease;\n    display: block;\n    height: 100%;\n`;\n\nconst Menu = styled.div`\n    box-sizing: border-box;\n    width: 340px;\n    // padding: 0px 12px;\n    color: #172b4d;\n`;\n\nconst MenuItems = styled.div`\n    border-bottom: 1px solid #ccd2d7;\n    align-items: center;\n`;\n\nconst Title = styled.h2`\n    font-size: 1.2rem;\n\n    font-weight: 500;\n    color: #193345;\n    text-align: center;\n`;\n\n\n\nconst CloseMenu = styled.button`\n    border: none;\n    font-size: 1.5rem;\n    background: none;\n    color: #42526e;\n    position: absolute;\n    top: 18px;\n    right: 12px;\n\n    &:hover {\n        color: #193345;\n        cursor: pointer;\n    }\n`;\n\nconst OptionsList = styled.ul`\n    text-align: left;\n    list-style: none;\n    cursor: pointer;\n    // padding-inline-end: 40px;\n`;\n\nconst OptionsItem = styled.li`\n    display: block;\n    align-items: center;\n    color: #193345;\n    font-size: 1rem;\n    // padding: .4rem .4rem;\n    line-height: 1.2rem;\n    border-radius: 3px;\n    font-weight: 600;\n    &:hover {\n        background-color: #6b808c3f;\n    }\n`;\n\nconst Icon = styled.span`\n    color: #193345;\n    padding: .3rem;\n    margin-right: .3rem;\n`;\nconst Members =styled.ul`\npadding-inline-start:0\n`\nconst MemberList=styled.div`\n    background-color:#EEEEEE\n    margin: 4px 5px;\n    border-radius:20px;\n    padding: 10px;\n`\n\n\n\nfunction BoardMenu(props) {\n\n    const { showBoardMenu, toggleMenu } = props;\n    const {memberList}=props.board\n    \n\n    return (\n        <MenuWrapper showBoardMenu={showBoardMenu}>\n            <Menu>\n                <MenuItems>\n                     <Title>Menu</Title>\n                    <CloseMenu onClick={toggleMenu}><FontAwesomeIcon icon={faTimes} /></CloseMenu>\n                </MenuItems>\n                \n                <MenuItems>\n                    <OptionsList>\n                        <OptionsItem>\n                           <Icon><FontAwesomeIcon icon={faUsers}/></Icon>Members\n                            <Members type=\"1\">\n                                {memberList && memberList.map((member,i)=>(\n                                    <MemberList>\n                                        <h3 style={{\"fontSize\":\"15px\",\"fontWeight\":\"500\"}}>{i+1}. {member.name}</h3>\n                                        <p style={{\"fontWeight\":\"200\"}}>{member.email.replace(\",\", \".\")}</p>\n                                    </MemberList>\n                                ))\n                                }\n                            </Members>\n                        </OptionsItem>\n                    </OptionsList>\n                </MenuItems>\n            </Menu>\n        </MenuWrapper>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    board:state.board\n});\n\nexport default connect(mapStateToProps)(BoardMenu);","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst TitleMenu = styled.div`\n    position: absolute;\n    top: 5rem;\n    background-color: #FFFFFF;\n    border-radius: .3rem;\n    width: 20rem;\n    height: 15rem;\n    padding: 0 12px 12px 12px;\n    color: #6b808c;\n    z-index: 5;\n    border: 1px solid rgba(0,0,0,0.2);\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\nconst Header = styled.div`\n    border-bottom: 1px solid #dcdfe3;\n    padding: 1.2rem 0;\n`;\nconst Title = styled.label`\n    text-align: center;\n    display: block;\n    font-weight: 400;\n    width: 100%;\n    font-size: 1rem;\n`;\nconst CloseMenuButton = styled.button`\n    position: absolute;\n    right: 0.5rem;\n    top: 0.5rem;\n    border: none;\n    color: #6b808c;\n    background-color: transparent;\n    font-size: 1.5rem;\n\n    &:hover {\n        color: #000000;\n        cursor: pointer;\n    }\n`;\nconst Form = styled.div``;\nconst Input = styled.input`\n    width: 100%;\n    height: 2rem;\n    padding: 1.5rem .8rem;\n    font-family: \"Open Sans\", sans-serif;\n    font-size: 14px;\n    color: #17394d;\n    background-color: #ebeef071;\n    border: 2px solid #dfe3e6;\n    border-radius: .3rem;\n    margin: 0rem 0rem 1rem 0rem;\n\n    &:hover {\n        background-color: #ebeef0;\n    }\n\n    &:focus {\n        border: 2px solid #0079bf;\n        outline: none;\n    }\n`;\nconst SaveButton = styled.button`\n    background-color: #5aac44;\n    color: white;\n    width: 5rem;\n    height: 2.5rem;\n    border-radius: 3px;\n    font-size: 1rem;\n    font-weight: 700;\n    border: none;\n\n    &:hover {\n        filter: brightness(110%);\n        cursor: pointer;\n    }\n`;\n\nconst Label = styled.label`\n    font-size: 14px;\n    font-weight: 600;\n    color: #000000;\n    margin: 1rem 0;\n    display: block;\n`;\n\nconst BoardTitleMenu = ({\n    handleShowNameMenu,\n    handleNameSubmit,\n    placeholder,\n    onNameChange\n}) => {\n    return (\n        <TitleMenu>\n            <Header>\n                <Title>Rename Board</Title>\n                <CloseMenuButton onClick={handleShowNameMenu}><FontAwesomeIcon icon={faTimes} /></CloseMenuButton>\n            </Header>\n\n            <Form >\n                <form onSubmit={handleNameSubmit}>\n                    <Label>Board Name</Label>\n                    <Input onChange={onNameChange} name=\"name\" placeholder={placeholder} />\n                    <SaveButton type=\"submit\">Save</SaveButton>\n                </form>\n            </Form>\n        </TitleMenu>\n    );\n}\n\nexport default BoardTitleMenu;\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst TitleMenu = styled.div`\n    position: absolute;\n    top: 5rem;\n    background-color: #FFFFFF;\n    border-radius: .3rem;\n    width: 20rem;\n    height: 15rem;\n    padding: 0 12px 12px 12px;\n    color: #6b808c;\n    z-index: 5;\n    border: 1px solid rgba(0,0,0,0.2);\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\nconst Header = styled.div`\n    border-bottom: 1px solid #dcdfe3;\n    padding: 1.2rem 0;\n`;\nconst Title = styled.label`\n    text-align: center;\n    display: block;\n    font-weight: 400;\n    width: 100%;\n    font-size: 1rem;\n`;\nconst CloseMenuButton = styled.button`\n    position: absolute;\n    right: 0.5rem;\n    top: 0.5rem;\n    border: none;\n    color: #6b808c;\n    background-color: transparent;\n    font-size: 1.5rem;\n\n    &:hover {\n        color: #000000;\n        cursor: pointer;\n    }\n`;\nconst Form = styled.div``;\nconst Input = styled.input`\n    width: 100%;\n    height: 2rem;\n    padding: 1.5rem .8rem;\n    font-family: \"Open Sans\", sans-serif;\n    font-size: 14px;\n    color: #17394d;\n    background-color: #ebeef071;\n    border: 2px solid #dfe3e6;\n    border-radius: .3rem;\n    margin: 0rem 0rem 1rem 0rem;\n\n    &:hover {\n        background-color: #ebeef0;\n    }\n\n    &:focus {\n        border: 2px solid #0079bf;\n        outline: none;\n    }\n`;\nconst SaveButton = styled.button`\n    background-color: #5aac44;\n    color: white;\n    width: 5rem;\n    height: 2.5rem;\n    border-radius: 3px;\n    font-size: 1rem;\n    font-weight: 700;\n    border: none;\n\n    &:hover {\n        filter: brightness(110%);\n        cursor: pointer;\n    }\n`;\n\nconst Label = styled.label`\n    font-size: 14px;\n    font-weight: 600;\n    color: #000000;\n    margin: 1rem 0;\n    display: block;\n`;\n\nconst InviteMenu = ({\n    handleShowInvite,\n    handleSubmitInvite,\n    onEmailChange\n}) => {\n    return (\n        <TitleMenu>\n            <Header>\n                <Title>Invite to board</Title>\n                <CloseMenuButton onClick={handleShowInvite}><FontAwesomeIcon icon={faTimes} /></CloseMenuButton>\n            </Header>\n\n            <Form >\n                <form onSubmit={handleSubmitInvite}>\n                    <Label>Enter email</Label>\n                    <Input onChange={onEmailChange} name=\"name\" />\n                    <SaveButton type=\"submit\">Add</SaveButton>\n                </form>\n            </Form>\n        </TitleMenu>\n    );\n}\n\nexport default InviteMenu;\n","import { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\n\nimport { addUserToBoard, listenBoardName, loadUserBoards, updateBoardName,getMember } from \"../../actions\";\nimport BoardMenu from './BoardMenu';\nimport BoardTitleMenu from './BoardTitleMenu';\nimport InviteMenu from './InviteMenu';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst NavWrapper = styled.div`\n    display: inline-flex;\n    align-items: center;\n    /*background-color: ${(props) => props.color || 'rgba(0,0,0,.15)'};*/\n    background-color: rgba(0,0,0,0.15);\n    justify-content: space-between;\n    width: 100%;\n    z-index: 2;\n    padding: 0.3rem 0.5rem 0.3rem 0.5rem;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\nconst Nav = styled.div`\n    z-index: 3;\n`;\nconst NavActionsWrapper = styled.div`\n    display: inline-flex;\n`;\nconst MenuActionButton = styled.div`\n    border-radius: .3rem;\n    background-color: rgba(0,0,0,0.16);\n    color: white;\n    padding: 0.4rem 0.6rem 0.4rem 0.6rem;\n    margin-right: 0.4rem;\n    &:hover {\n        background-color: rgba(255,255,255,0.35);\n        cursor: pointer;\n    }\n    font-size: 18px;\n    font-weight: bold;\n    top: 50%;\n    align-items: center;\n`;\nconst MenuButton = styled.div`\n    border-radius: .3rem;\n    padding: 0.4rem 0.6rem 0.4rem 0.6rem;\n    background-color: rgba(0,0,0,0.16);\n    color: white;\n    \n    &:hover {\n        background-color: rgba(255,255,255,0.35);\n        cursor: pointer;\n    }\n`;\n\nfunction BoardNav(props) {\n\n    const [showNameMenu, setShowNameMenu] = useState(false);\n    const [boardName, setBoardName] = useState(\"\");\n    const [showInviteMenu, setShowInviteMenu] = useState(false);\n    const [inviteEmail, setInviteEmail] = useState(\"\");\n    const [showBoardMenu, setShowBoardMenu] = useState(false);\n    const [success,setSuccess]=useState(null);\n\n\n    if(success===true){\n        toast.success('Invitation sent successfully', {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n            const boardId = props.boardId;\n            setSuccess(null)\n            props.getMember(boardId)\n    }\n    if(success===false){\n                toast.error('Failed to invite! May be user does not exist!', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n                setSuccess(null)\n        \n    }\n\n\n    \n\n    const handleShowBoardMenu = () => {\n        setShowBoardMenu(!showBoardMenu);\n    }\n\n    const handleShowNameMenu = () => {\n        setShowNameMenu(!showNameMenu);\n    }\n\n    const handleShowInvite = () => {\n        setShowInviteMenu(!showInviteMenu);\n    }\n\n\n    const handleSubmitInvite = (e) => {\n        e.preventDefault();\n        const email = inviteEmail;\n        if (email.length > 0 && email.length < 50) {\n           props.addUserToBoard(email, props.boardId,setSuccess)\n        }\n        setShowInviteMenu(!showInviteMenu);\n    }\n\n    const handleNameSubmit = (e) => {\n        e.preventDefault();\n        const newName = boardName;\n        if (newName.length > 0 && newName.length < 30) {\n            props.updateBoardName(newName, props.boardId);\n        }\n        setShowNameMenu(!showNameMenu);\n    }\n\n    const onNameChange = (e) => {\n        e.preventDefault();\n        setBoardName(e.target.value);\n    }\n\n    const onEmailChange = (e) => {\n        e.preventDefault();\n        setInviteEmail(e.target.value);\n    }\n\n    const getName = () => {\n        const boardId = props.boardId;\n        let title = '';\n        props.boards.boards.forEach((board) => {\n            if (board.boardId === boardId) {\n                title = board.title;\n            }\n        });\n        return title;\n    }\n\n    useEffect(() => {\n        const boardId = props.boardId;\n        props.loadUserBoards();\n        props.listenBoardName(boardId);\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n    if (props.boards.isLoading) {\n        return (<div></div>);\n    } else {\n        return (\n            <>\n            <ToastContainer></ToastContainer>\n            <NavWrapper>\n                <Nav>\n                    <NavActionsWrapper>\n                        <MenuActionButton onClick={handleShowNameMenu}>\n                            {getName()}\n                        </MenuActionButton>\n                        {showNameMenu && (\n                            <BoardTitleMenu\n                                handleShowNameMenu={handleShowNameMenu}\n                                handleNameSubmit={handleNameSubmit}\n                                placeholder={boardName}\n                                onNameChange={onNameChange}\n                            />\n                        )}\n                        <MenuActionButton onClick={handleShowInvite}>\n                            Invite\n                    </MenuActionButton>\n                        {showInviteMenu && (\n                            <InviteMenu\n                                handleShowInvite={handleShowInvite}\n                                handleSubmitInvite={handleSubmitInvite}\n                                onEmailChange={onEmailChange}\n                            />\n                        )}\n\n                    </NavActionsWrapper>\n                </Nav>\n\n                <BoardMenu showBoardMenu={showBoardMenu} toggleMenu={handleShowBoardMenu} />\n                <MenuButton onClick={handleShowBoardMenu}>\n                    <FontAwesomeIcon icon={faEllipsisH} style={{ marginRight: '0.4rem' }} />\n                    Show Menu\n                </MenuButton>\n\n            </NavWrapper>\n            </>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    boards: state.boards,\n    board: state.board,\n    theme: state.theme,\n});\n\nexport default connect(mapStateToProps, { listenBoardName, updateBoardName, loadUserBoards, addUserToBoard ,getMember})(BoardNav);","import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport AddIcon from '@material-ui/icons/Add';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextAreaAutosize from 'react-textarea-autosize';\nimport styled from 'styled-components';\n\nimport { addCard, addList, updateBoard } from '../../actions/board';\n\nclass ActionButton extends Component {\n\n    state = {\n        formOpen: false,\n        text: ''\n    }\n\n    //TODO: fix this mess\n    openForm = () => {\n        this.setState({\n            formOpen: true\n        })\n    }\n    //TODO: fix this mess\n    closeForm = e => {\n        this.setState({\n            formOpen: false,\n            text: e.target.value\n        })\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n\n    handleAddList = () => {\n        const { text } = this.state;\n        if (text) {\n            this.props.addList(text);\n        }\n        setTimeout(() => {\n            this.props.updateBoard(this.props.board);\n        }, 100);\n    }\n\n    handleAddCard = () => {\n        const { text } = this.state;\n        if (text) {\n            this.setState({ text: \"\" });\n            this.props.addCard(this.props.listID, text);\n        }\n        setTimeout(() => {\n            this.props.updateBoard(this.props.board);\n        }, 100);\n    }\n\n    renderAddButton = () => {\n        const list = this.props.list;\n\n        const buttonText = list ? 'Add another card' : 'Add another list';\n        const buttonTextOpacity = list ? 1 : 1;\n        const buttonTextColor = list ? '#5e6c84' : 'white';\n        const buttonTextBackground = list ? 'inherit' : 'rgba(0,0,0,0.16)';\n\n        const Button = styled.div`\n            display: inline-flex;\n            flex-direction: row;\n            align-items: center;\n            margin: 8px 8px 8px 8px;\n            cursor: pointer;\n            border-radius: 8px;\n            height: 36px;\n            width: 275px;\n            padding-left: 8px;\n            min-width: 275px;\n            font-family: -apple-system, BlinkMacSystemFont, Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif;\n            font-size: 14px;\n            line-height: 20px;\n            font-weight: 400;\n\n            opacity: ${buttonTextOpacity};\n            color: ${buttonTextColor};\n            background-color: ${buttonTextBackground};\n            \n            &:hover {\n                background-color: ${list ? '#e1e2e6' : 'rgba(0, 0, 0, 0.1)'};\n                transition: 0.3s; \n            }\n        `;\n\n        return (\n            <Button onClick={this.openForm}>\n                <AddIcon />\n                <p>{buttonText}</p>\n\n            </Button>\n        )\n    }\n\n    renderForm = () => {\n        const { list } = this.props;\n        const placeholderText = list ? 'Enter a title for this card...' : 'Enter a list title...';\n        const buttonText = list ? 'Add Card' : 'Add List';\n\n        const Buttons = styled.div`\n            display: inline-block;\n        `;\n\n        return (\n            <div>\n                <Card style={{\n                    margin: '8px',\n                    overflow: 'hidden',\n                    minHeight: '80px',\n                    minWidth: '272px'\n                }}>\n                    <TextAreaAutosize\n                        placeholder={placeholderText}\n                        autoFocus onBlur={this.closeForm}\n                        value={this.state.text}\n                        onChange={this.handleInputChange}\n                        style={{\n                            resize: 'none',\n                            width: '93%',\n                            border: 'none',\n                            outline: 'none',\n                            margin: '8px',\n                            height: '300px'\n                        }} />\n                </Card>\n                <div style={{\n                    alignItems: 'center',\n                    display: 'flex',\n                }}>\n                    <Buttons>\n                        <Button\n                            onMouseDown={list ? this.handleAddCard : this.handleAddList}\n                            title={buttonText}\n                            variant='contained'\n                            style={{\n                                color: 'white',\n                                backgroundColor: '#5aac44',\n                                margin: '0px 8px 8px 8px',\n                                textTransform: 'capitalize',\n                                fontSize: '14px',\n                            }}>{buttonText}</Button>\n                        <Button style={{\n                            margin: '0px 8px 8px 0px',\n                            fontSize: '14px',\n                            textTransform: 'capitalize',\n                            backgroundColor: 'rgba(255, 255, 255, 0.5)',\n                            color: 'black',\n                        }} variant='contained'>close</Button>\n                    </Buttons>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\n\nconst mapStateToProps = state => ({\n    board: state.board\n});\n\n\nexport default connect(mapStateToProps, { addList, addCard, updateBoard })(ActionButton);","import { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useDispatch, useStore } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { deleteCard, updateBoard } from '../../actions';\n\nconst Div = styled.div`\n    margin-bottom: 8px;\n    margin-left: 8px;\n    margin-right: 8px;\n    font-size: 14px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: #172b4d;\n`;\n\n\n\nconst StyledCardContent = styled(CardContent)`\n    display: inline-block;\n`;\n\nconst CardOptions = styled.div`\n    visibility: hidden;\n    display: inline-block;\n    margin-right: 15px;\n    border-radius: .3rem;\n    padding: 0.4rem 0.6rem 0.4rem 0.6rem;\n    color: #172b4d;\n    opacity: 0.7;\n    \n    &:hover {\n        background-color: #e1e2e6;\n    }\n`;\n\nconst StyledCard = styled(Card)`\n    justify-content: space-between;\n    display: inline-flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    &:hover {\n        background-color: rgb(240, 240, 240);\n\n    }\n    &:hover ${CardOptions} {\n        visibility: visible;\n    }\n`;\n\n\n\nconst TrelloCard = ({ text, id, index, listID }) => {\n\n    const dispatch = useDispatch();\n    const store = useStore();\n\n\n    const handleDeleteCard = () => {\n        dispatch(deleteCard(id, listID));\n        const tempboard = store.getState().board; // ugly solution, try fix\n        dispatch(updateBoard(tempboard));\n    }\n    return (\n        <Draggable draggableId={String(id)} index={index}>\n            {(provided) => (\n                <Div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                    <StyledCard>\n                        <StyledCardContent>\n                            {text}\n                        </StyledCardContent>\n                        <CardOptions onMouseUp={handleDeleteCard}><FontAwesomeIcon icon={faTrash} /></CardOptions>\n                    </StyledCard>\n                </Div>\n            )}\n\n        </Draggable>\n    )\n}\n\nexport default TrelloCard;","import { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport FadeIn from 'react-fade-in';\nimport { useDispatch, useStore } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { deleteList, updateBoard } from '../../actions';\nimport ActionButton from './ActionButton';\nimport TrelloCard from './Card';\n\nconst ListStyle = styled.div`\n    background-color: #ebecf0;\n    border-radius: 3px;\n    width: 300px;\n    height: 100%;\n    padding: 8px 1px 8px 1px;\n    margin: 8px 0px 0px 8px;\n    \n`;\n\nconst Title = styled.div`\n    color: #172b4d;\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif;\n    font-size: 14px;\n    line-height: 20px;\n    font-weight: 400;\n    margin: 15px 15px 15px 22px;\n    font-weight: bold;\n    opacity: 0.7;\n    display: inline-block;\n`;\n\nconst DroppableCards = styled.div`\n    min-height: 20px;\n`;\n\nconst ListHeader = styled.div`\n    justify-content: space-between;\n    display: inline-flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n`;\n\nconst ListOptions = styled.div`\n    display: inline-block;\n    margin-right: 15px;\n    border-radius: .3rem;\n    padding: 0.4rem 0.6rem 0.4rem 0.6rem;\n    color: #172b4d;\n    opacity: 0.7;\n    \n    &:hover {\n        background-color: #e1e2e6;\n        \n    }\n`;\n\n\nconst List = ({ title, cards, listID, index }) => {\n    const dispatch = useDispatch();\n    const store = useStore();\n\n    const handleDeleteList = () => {\n        dispatch(deleteList(listID));\n        const tempboard = store.getState().board; // ugly solution, try fix\n        dispatch(updateBoard(tempboard));\n    }\n    return (\n        <FadeIn>\n            <Draggable draggableId={String(listID)} index={index}>\n                {provided => (\n                    <ListStyle {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\n                        <ListHeader>\n                            <Title>{title}</Title>\n                            <ListOptions onMouseUp={handleDeleteList}><FontAwesomeIcon icon={faTrash} /></ListOptions>\n                        </ListHeader>\n                        <Droppable droppableId={String(listID)}>\n                            {(provided) => (\n                                <DroppableCards {...provided.droppableProps} ref={provided.innerRef}>\n\n                                    {(cards != null) ?\n                                        cards.map((card, index) => (\n                                            <TrelloCard index={index} text={card.text} key={card.id} id={card.id} listID={listID} />\n                                        )) : null\n                                    }\n                                    {provided.placeholder}\n                                </DroppableCards>\n                            )}\n                        </Droppable>\n                        <ActionButton listID={listID} list />\n                    </ListStyle>\n                )}\n            </Draggable>\n        </FadeIn>\n    )\n}\n\nexport default List;","import React, { Component } from 'react'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport FadeIn from 'react-fade-in';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { listenBoard, loadBoard, sort, updateBoard,getMember } from '../../actions/board';\nimport BoardNav from '../Navbar/BoardNav';\nimport ActionButton from './ActionButton';\nimport List from './List';\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst BoardStyle = styled.div`\n    position: absolute;\n    /*background-color: ${(props) => props.color || '#519839'};*/\n`;\n\nclass Board extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const boardId = this.props.match.params.id;\n        this.props.loadBoard(boardId);\n        this.props.getMember(boardId)\n    }\n\n    componentDidMount() {\n        const boardId = this.props.match.params.id;\n        this.props.listenBoard(boardId);\n        \n    }\n\n    componentWillUnmount() {\n\n    }\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId, type } = result;\n        if (!destination) {\n            return;\n        }\n        this.props.sort(\n            source.droppableId,\n            destination.droppableId,\n            source.index,\n            destination.index,\n            draggableId,\n            type\n        );\n        this.props.updateBoard(this.props.board);\n    }\n\n    render() {\n        const { lists } = this.props.board;\n\n        return (\n            <FadeIn>\n                {this.props.auth.isAuthenticated && <BoardNav boardId={this.props.match.params.id} />}\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <BoardStyle >\n                        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n                            {provided => (\n                                <ListsContainer {...provided.droppableProps} ref={provided.innerRef}>\n                                    {(lists != null) ? lists.map((list, index) => (\n                                        <List index={index}\n                                            listID={list.id}\n                                            title={list.title}\n                                            key={list.id}\n                                            cards={list.cards}\n                                        />\n                                    )) : null}\n                                    {provided.placeholder}\n                                    <ActionButton type='list' />\n                                </ListsContainer>\n                            )}\n                        </Droppable>\n                    </BoardStyle>\n                </DragDropContext>\n            </FadeIn>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    board: state.board,\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { sort, updateBoard, loadBoard, listenBoard, getMember })(Board);\n","import { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react';\nimport FadeIn from 'react-fade-in';\nimport { useDispatch } from \"react-redux\";\nimport styled from 'styled-components';\n\nimport { deleteBoard } from '../../actions';\n\nconst TileOptions = styled.div`\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    visibility: hidden;\n    display: inline-block;\n    margin: 5px;\n    border-radius: .3rem;\n    padding: 0.4rem 0.6rem 0.4rem 0.6rem;\n    color: #172b4d;\n    opacity: 0.4;\n    \n    &:hover {\n        background-color: #e1e2e6;\n    }\n`;\nconst Tile = styled.div`\n    position: relative;\n    display: flex;\n    height: 80px;\n    width: 160px;\n    border-radius: 5px;\n    flex-direction: column;\n    align-items: left;\n    text-align: left;\n    color: #fff;\n    background-color: #519839;\n    line-height: 20px;\n    cursor: pointer;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n\n    &:hover ${TileOptions} {\n        visibility: visible;\n    }\n`;\n\nconst TileText = styled.div`\n    margin-left: 10px;\n    margin-top: 10px;\n`;\n\nexport default function BoardTile(props) {\n\n    const dispatch = useDispatch();\n\n    const handleDeleteBoard = (e) => {\n        dispatch(deleteBoard(props.boardId));\n    }\n\n    return (\n        <FadeIn>\n            <Tile className={\"outer\"} onClick={props.onClick}>\n                <TileOptions className={\"inner\"} onMouseDown={handleDeleteBoard}>\n                    <FontAwesomeIcon className={\"inner\"} icon={faTrash} />\n                </TileOptions>\n                <TileText >{props.title}</TileText>\n            </Tile>\n        </FadeIn>\n    )\n}\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createBoard, loadUserBoards } from '../../actions/';\n\nconst styles = theme => ({\n    alignItemsAndJustifyContent: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nclass CreateBoardModal extends Component {\n    state = {\n        open: false,\n        title: '',\n    };\n\n    toggleOpen = () => {\n        this.setState({\n            open: !this.state.open,\n        });\n    };\n\n    onChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        // Attempt to register\n        this.props.createBoard(this.state.title);\n        this.props.loadUserBoards();\n        this.toggleOpen();\n    };\n\n\n    render() {\n\n        const classes = this.props;\n        return (\n            <Fragment>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.toggleOpen}>\n                    Create new board\n                </Button>\n                <Dialog open={this.state.open} onClose={this.toggleOpen} >\n                    <DialogTitle>Create new board</DialogTitle>\n                    <form action=\"/\" method=\"POST\" onSubmit={this.onSubmit}>\n                        <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"title\"\n                                label=\"Add board title\"\n                                type=\"text\"\n                                required={true}\n                                fullWidth\n                                onChange={this.onChange}\n                            />\n                        </DialogContent>\n                        <DialogActions className={classes.alignItemsAndJustifyContent}>\n                            <Button type=\"submit\" color=\"primary\">\n                                Create\n                            </Button>\n                            <IconButton color=\"primary\" onClick={this.toggleOpen}>\n                                <CloseIcon />\n                            </IconButton>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\n\nexport default connect(null, { createBoard, loadUserBoards })(withStyles(styles)(CreateBoardModal));\n","import AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport React, { Component } from 'react'\nimport FadeIn from 'react-fade-in';\nimport Loader from 'react-loader-spinner';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { loadUserBoards } from '../../actions/';\nimport { loadBoard } from '../../actions/board';\nimport BoardTile from './BoardTile';\nimport CreateBoardModal from './CreateBoardModal';\n\nconst Collection = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    min-height: 70vh;\n`;\n\nconst Paper = styled.div`\n    background: rgba(255,255,255,0.85);\n    padding: 2rem;\n    border-radius: 1rem;\n`;\n\nconst Title = styled.div`\n    position: center;\n    padding: 5px;\n    font-size: 16px;\n    font-weight: 700;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: #172b4d;\n`;\n\nconst Spacing = styled.div`\n    margin: 5px;\n`;\n\nconst Boards = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 600px;\n    margin-bottom: 2rem;\n    margin-top: 1rem;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n`;\n\nclass BoardCollection extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClickBoard = this.handleClickBoard.bind(this);\n    };\n    componentDidMount() {\n        this.props.loadUserBoards();\n    };\n\n    handleClickBoard(e, boardId) {\n        if (e.target.className instanceof SVGAnimatedString || e.target.className.includes('inner')) {\n\n        } else {\n            const { history } = this.props;\n            this.props.loadBoard(boardId);\n            history.push(\"/board/\" + boardId);\n        }\n\n    };\n\n    render() {\n        return (\n            <FadeIn>\n                <Collection>\n                    <Paper>\n                        <Title>\n                            <AccountCircleIcon />\n                            <p>Your boards</p>\n                        </Title>\n                        <Boards>\n                            {\n                                this.props.boards.isLoading ? <Loader /> :\n                                    this.props.boards.boards.map((board, index) => (\n                                        <Spacing key={board.boardId}>\n                                            <BoardTile onClick={(e) => this.handleClickBoard(e, board.boardId)} index={index} title={board.title} key={board.boardId} boardId={board.boardId} />\n                                        </Spacing>\n                                    ))\n                            }\n                        </Boards>\n                        <Spacing />\n                        <CreateBoardModal />\n                    </Paper>\n                </Collection>\n            </FadeIn>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    boards: state.boards\n});\n\nexport default connect(mapStateToProps, { loadUserBoards, loadBoard })(BoardCollection);\n","import { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from \"../../assets/CSILogo.png\"\n\nimport { logoutUser } from \"../../actions\";\n\nconst MainNav = styled.div`\n    /*background: ${(props) => props.color || 'rgba(2, 106, 167, 1)'};*/\n    margin: auto;\n    width: 100%;\n    padding: 4px;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n    background-color: rgba(0,0,0,0.25);\n`;\n\nconst Logo = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    left: 50%;\n    right: 50%;\n`;\nconst LogoHeading=styled.p`\n    margin:0;\n    padding:0 5px;\n    color:white;\n    font-weight:900\n`\nconst Img = styled.img`\n    opacity: 0.7;\n    width: 6rem;\n    height: 2rem;\n    :hover {\n        opacity: 0.8;\n        cursor: pointer;\n    }\n`;\n\nconst Buttons = styled.div`\n    justify-content: flex-end;\n    display: inline-flex;\n    align-items: center;\n`;\n\nconst SignButton = styled.div`\n    border-radius: .3rem;\n    background-color: rgba(0,0,0,0.16);\n    color: white;\n    padding: 0.4rem 0.6rem 0.4rem 0.6rem;\n    &:hover {\n        background-color: rgba(255,255,255,0.35);\n        cursor: pointer;\n    }\n    margin: 0 4px 0 4px;\n`;\n\n\n\nconst TrelloNav = (props) => {\n    const { isAuthenticated, isLoading } = props;\n    \n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleSignOut = () => {\n        dispatch(logoutUser());\n        history.push('/signin');\n    }\n\n    const isLoggedIn = (\n        <SignButton onMouseDown={handleSignOut}>Sign out</SignButton>\n    );\n    return (\n        <MainNav>\n            <Link to=\"/\">\n                <SignButton>\n                    <FontAwesomeIcon icon={faHome} size=\"lg\" />\n                </SignButton>\n            </Link>\n            <Link to=\"/\">\n                <Logo>\n                    <Img src={logo} />\n                    <LogoHeading>TodoList</LogoHeading>\n                </Logo>\n            </Link>\n            <Buttons>\n                {!isLoading ? (isAuthenticated ? isLoggedIn : null) : null}\n            </Buttons>\n        </MainNav>\n    );\n}\n\n\nexport default TrelloNav;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({\n    component: Component,\n    isAuthenticated,\n    isLoading,\n    ...rest\n}) => (\n        <Route\n            {...rest}\n            render={props =>\n                isLoading ? (\n                    <div />\n                ) : isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                            <Redirect\n                                to=\"/signin\"\n                            />\n                        )\n            }\n        />\n    );\n\nexport default ProtectedRoute;","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {FcGoogle} from \"react-icons/fc\"\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport logo from \"../assets/CSILogo.png\"\n\nimport { loginUser } from \"../actions\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        background: 'rgba(255, 255, 255,0.9)',\n        padding: '2rem',\n        borderRadius: '1rem',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        background: \"transparent\",\n        width:\"100px\",\n        height:\"100px\"\n    },\n    logo:{\n        width: \"100%\",\n    },\n    google:{\n        background:\"white\",\n        margin:\"0 10Px\",\n        borderRadius:\"100%\"\n\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: '#026aa7'\n    },\n}));\n\nexport default function SignIn(props) {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        toFrontpage: false,\n    });\n\n    async function handleSignIn(e) {\n        e.preventDefault();\n        dispatch(loginUser(props.history,() => props.history.push(\"/\")));\n        setState({ toFrontpage: true });\n    };\n\n    const redirect = (\n        <Redirect to=\"/\" />\n    );\n\n    const signIn = (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    {/* <LockOutlinedIcon /> */}\n                    <img src={logo} className={classes.logo} alt=\"logo\"></img>\n                </Avatar>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSignIn}\n                    >\n                        <FcGoogle className={classes.google} size={35}/> Sign In With Google\n                    </Button>\n            </div>\n        </Container>\n    );\n\n    if (state.toFrontpage) {\n        return redirect;\n    } else {\n        return signIn;\n    }\n}","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\n// import {  getPhotosList } from './actions';\nimport Board from './components/Board/Board';\nimport BoardCollection from './components/BoardCollection/BoardCollection';\nimport TrelloNav from './components/Navbar/TrelloNav';\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport SignIn from './components/SignIn';\nimport Background from \"./assets/background.png\"\nfunction App(props) {\n\n  const { isAuthenticated, isLoading } = props.auth;\n  useEffect(() => {\n    document.body.style.backgroundImage= `url(${Background})`;\n    // document.body.style.background= 'linear-gradient(110deg, rgba(255,255,255,0.4206057422969187) 0%, rgba(203,116,54,0.7539390756302521) 51%)';\n    document.body.style.backgroundRepeat='no-repeat'\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.width = '100vl';\n    document.body.style.height = '100vh';\n\n  }, []);\n\n  return (\n    <Router>\n      <TrelloNav isAuthenticated={isAuthenticated} isLoading={isLoading} />\n\n      <Switch>\n        <ProtectedRoute\n          exact path=\"/\"\n          component={BoardCollection}\n          isAuthenticated={isAuthenticated}\n          isLoading={isLoading}\n        />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/board/:id\" component={Board} isAuthenticated={isAuthenticated} isLoading={isLoading} />\n      </Switch>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, )(App);\n","import {\n    GET_LISTS,\n    DRAG_HAPPENED,\n    ADD_CARD,\n    ADD_LIST,\n    GET_BOARD_SUCCESS,\n    GET_BOARD_FAIL,\n    CREATE_BOARD_SUCCESS,\n    DELETE_CARD,\n    DELETE_LIST,\n    RECIEVED_BOARD_MEMBER,\n} from \"../actions/\";\n\nimport { ObjectID } from 'bson';\n\nfunction newID() {\n    return (new ObjectID()).toHexString();\n}\n\n\nconst initialState = {\n    boardId: newID(),\n    title: '',\n    lists: [\n    ],\n    memberList:[]\n};\n\nconst board = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_BOARD_SUCCESS:\n            return { ...state, boardId: action.uid, lists: [] };\n        case GET_BOARD_SUCCESS:\n            return {...state,boradId:action.board.boradId,lists:action.board.lists};\n        case GET_BOARD_FAIL:\n            return { ...state, lists: [], boardId: action.uid };\n        case GET_LISTS:\n            return state;\n        case ADD_LIST:\n            const newList = {\n                title: action.payload,\n                cards: [],\n                id: newID(),\n            }\n            if (state.lists) {\n                return { ...state, lists: [...state.lists, newList] };\n            } else {\n                return { ...state, lists: [newList] }\n            }\n\n\n        case DELETE_LIST:\n            const listID = action.payload.listID;\n            const newLists = [...state.lists];\n            state.lists.forEach(function (list, index) {\n                if (list.id === listID) {\n                    newLists.splice(index, 1);\n                    return;\n                }\n            });\n            return { ...state, lists: newLists };\n\n        case ADD_CARD: {\n            const newCard = {\n                text: action.payload.text,\n                id: newID(),\n            }\n            const newLists = state.lists.map(list => {\n                if (list.id === action.payload.listID) {\n                    if (list.cards) {\n                        return { ...list, cards: [...list.cards, newCard] };\n                    } else {\n                        return { ...list, cards: [newCard] };\n                    }\n                } else {\n                    return list;\n                }\n            });\n\n            return { ...state, lists: newLists };\n        }\n\n        case DELETE_CARD: {\n            const cardID = action.payload.cardID;\n            const listID = action.payload.listID;\n            const newLists = state.lists.map(list => {\n                if (list.id === listID) {\n                    const cardsList = [...list.cards];\n                    list.cards.forEach(function (card, index) {\n                        if (card.id === cardID) {\n                            cardsList.splice(index, 1);\n                            return;\n                        }\n                    });\n                    return { ...list, cards: cardsList };\n                } else {\n                    return list;\n                }\n            });\n            return { ...state, lists: newLists };\n        }\n\n\n        case DRAG_HAPPENED:\n            const {\n                droppableIdStart,\n                droppableIdEnd,\n                droppableIndexStart,\n                droppableIndexEnd,\n                draggableId,\n                type\n            } = action.payload;\n            const newState = { ...state };\n\n            //dragging lists around\n            if (type === \"list\") {\n                const list = newState.lists.splice(droppableIndexStart, 1);\n                newState.lists.splice(droppableIndexEnd, 0, ...list);\n                return newState;\n            }\n\n            //same list\n            if (droppableIdStart === droppableIdEnd) {\n                const list = newState.lists.find(list => droppableIdStart === list.id);\n                const card = list.cards.splice(droppableIndexStart, 1);\n                list.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n\n            //other list\n            if (droppableIdStart !== droppableIdEnd) {\n                const list = newState.lists.find(list => droppableIdStart === list.id);\n                const otherList = newState.lists.find(list => droppableIdEnd === list.id);\n                const card = list.cards.splice(droppableIndexStart, 1);\n                if (!otherList.cards) {\n                    otherList.cards = [...card]\n                } else {\n                    otherList.cards.splice(droppableIndexEnd, 0, ...card);\n                }\n            }\n\n            return newState;\n\n        case RECIEVED_BOARD_MEMBER:\n            return {...state,memberList:action.memberList}\n\n        default:\n            return state;\n\n\n    }\n};\n\nexport default board;","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport boards from \"./boards\";\nimport board from \"./board\";\n\n\nexport default combineReducers({ auth, boards, board });","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILURE,\n    VERIFY_REQUEST,\n    VERIFY_SUCCESS,\n} from \"../actions/\";\n\nexport default (\n    state = {\n        isLoading: false,\n        loginError: false,\n        logoutError: false,\n        registerError: false,\n        isAuthenticated: false,\n        error: false,\n        errorMessage: '',\n        user: {}\n    },\n    action\n) => {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                loginError: false,\n                errorMessage: '',\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: true,\n                user: action.user,\n                errorMessage: '',\n            };\n        case LOGIN_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: false,\n                loginError: true\n            };\n        case LOGOUT_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                logoutError: false\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: false,\n                user: {}\n            };\n        case LOGOUT_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                logoutError: true\n            };\n        case VERIFY_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                verifyingError: false\n            };\n        case VERIFY_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: true\n            };\n        default:\n            return state;\n    }\n};","import {\n    GET_BOARDS_REQUEST,\n    GET_BOARDS_SUCCESS,\n    GET_BOARD_NAME_SUCCESS,\n} from \"../actions/\";\n\nexport default (\n    state = {\n        isLoading: true,\n        boards: []\n    },\n    action\n) => {\n    switch (action.type) {\n        case GET_BOARDS_SUCCESS:\n            return { ...state, isLoading: false, boards: action.boards };\n        case GET_BOARD_NAME_SUCCESS:\n            if (!state.boards)\n                return { ...state };\n\n            const newState = state.boards.map(board => {\n                if (board.boardId === action.boardId) {\n                    return { ...board, title: action.name }\n                } else {\n                    return { ...board }\n                }\n            });\n            return { ...state, boards: newState };\n\n        case GET_BOARDS_REQUEST:\n            return { ...state, isLoading: true };\n        default:\n            return state;\n    }\n};","import CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore();\n\nfunction Root() {\n    return (\n        <Provider store={store}>\n            <CssBaseline />\n\n            <App />\n\n        </Provider>\n    );\n}\n\nexport default Root;","import { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { verifyAuth } from \"./actions/\";\nimport rootReducer from \"./reducers\";\n\nexport default function configureStore(persistedState) {\n    const store = createStore(\n        rootReducer,\n        persistedState,\n        composeWithDevTools(applyMiddleware(thunkMiddleware))\n    );\n    store.dispatch(verifyAuth());\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/CSILogo.5b625fca.png\";"],"sourceRoot":""}